
user  nginx;
worker_processes  2;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
	worker_connections  1024;
}

stream {
	upstream rabbitmq{
		least_conn;
		server 192.168.13.31:5672;
		server 192.168.13.32:5672;
		server 192.168.13.33:5672;
	}
	server {
		listen 5672;
		proxy_pass rabbitmq;
	}
}

http {
	include    /etc/nginx/proxy.conf;
	#limit_req_zone $binary_remote_addr zone=one:10m rate=5r/s;
	server_tokens off;

	sendfile on;
	keepalive_timeout 29; # Adjust to the lowest possible value that makes sense for your use case.
	client_body_timeout 10; client_header_timeout 10; send_timeout 10;

	server_names_hash_bucket_size 64;
	server_names_hash_max_size 8192;

	proxy_cache_path /tmp/nginx levels=1:2 keys_zone=pspace_zone:10m inactive=60m max_size=2g;
	proxy_cache_key "$scheme$request_method$host$request_uri";


	upstream rabbitmqui {
		least_conn;
		server 192.168.13.31:15672;
		server 192.168.13.32:15672;
		server 192.168.13.33:15672;
	}
	server {
		listen 15672;
		location / {
			proxy_pass http://rabbitmqui;
		}
	}

	upstream ksangw_80{
		least_conn;
		server 192.168.13.31:8080;
		server 192.168.13.32:8080;
		server 192.168.13.33:8080;
	}

	server {
		listen 8080;
		location / {
			proxy_pass http://ksangw_80;
			client_max_body_size 100G;
		}
	}
	
	upstream ksangw_443{
		least_conn;
		server 192.168.13.31:8443;
		server 192.168.13.32:8443;
		server 192.168.13.33:8443;
	}

	server {
		listen 8443 ssl;

		ssl_certificate /etc/ssl/certs/pspace.crt;
		ssl_certificate_key /etc/ssl/certs/pspace.key;
		ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
		ssl_prefer_server_ciphers on;
		ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
		ssl_ecdh_curve secp384r1;
		ssl_session_cache shared:SSL:10m;
		ssl_session_tickets off;
		ssl_stapling on; #ensure your cert is capable
		ssl_stapling_verify on; #ensure your cert is capable
		
		location / {
			proxy_pass https://ksangw_443;
			client_max_body_size 100G;
		}
	}

	upstream ksan_80{
		least_conn;
		server 192.168.13.31:80;
		server 192.168.13.32:80;
		server 192.168.13.33:80;
	}

	server {
		listen 80;
		location / {
			proxy_pass https://$host:5443$request_uri;
		}
	}

	upstream ksan_443{
		least_conn;
		server 192.168.13.31:5443;
		server 192.168.13.32:5443;
		server 192.168.13.33:5443;
	}

	server {
		listen 5443 ssl;

		ssl_certificate /etc/ssl/certs/pspace.crt;
		ssl_certificate_key /etc/ssl/certs/pspace.key;
		ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
		ssl_prefer_server_ciphers on;
		ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
		ssl_ecdh_curve secp384r1;
		ssl_session_cache shared:SSL:10m;
		ssl_session_tickets off;
		ssl_stapling on; #ensure your cert is capable
		ssl_stapling_verify on; #ensure your cert is capable

		location / {
			proxy_pass  https://ksan_443;
		}
	}
}
